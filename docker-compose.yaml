services:

  pwordpress:
    build: 
      context: ./infrastructure/production/
      dockerfile: prod.Dockerfile
    ports:
      - 8080:80
    env_file: ./infrastructure/production/.prod.env
    depends_on:
      pdb:
        condition: service_healthy
    volumes:
      - ./dcpleaderboard/:/var/www/html/wp-content/plugins/dcpleaderboard
    entrypoint: /bin/bash -c "/usr/bin/install_wp.sh"
    

  pdb:
    image: mysql:8.0.22
    container_name: pdb
    hostname: pdb
    restart: always
    ports:
      - 4406:3306
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_ROOT_PASSWORD: 'examplerootpass'
    volumes:
      - pdb:/var/lib/mysql
    healthcheck: # Optional but recommended: ensures DB is ready before WordPress starts
      test: ["CMD", "mysqladmin", "ping", "-h", "pdb"]
      timeout: 20s
      retries: 10

  swordpress:
    build: 
      context: ./infrastructure/staging/
      dockerfile: staging.Dockerfile
    cap_add:
      - NET_ADMIN
    ports:
      - 8181:80
    env_file: ./infrastructure/staging/.staging.env
    depends_on:
      sdb:
        condition: service_healthy
    volumes:
      - ./dcpleaderboard/:/var/www/html/wp-content/plugins/dcpleaderboard
    entrypoint: /bin/bash -c "/usr/bin/install_wp.sh"

  sdb:
    image: mysql:8.0.22
    container_name: sdb
    hostname: sdb
    restart: always
    ports:
      - 5506:3306
    environment:
      MYSQL_DATABASE: exampledb1
      MYSQL_USER: exampleuser1
      MYSQL_PASSWORD: examplepass1
      MYSQL_ROOT_PASSWORD: 'examplerootpass1'
    volumes:
      - sdb:/var/lib/mysql  
    healthcheck: # Optional but recommended: ensures DB is ready before WordPress starts
      test: ["CMD", "mysqladmin", "ping", "-h", "sdb"]
      timeout: 20s
      retries: 10  

volumes:
  pdb:
  sdb:  